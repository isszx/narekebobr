---
import IconDark from './icons/IconDark.astro';
import IconLight from './icons/IconLight.astro';
// import { IconDark, IconLight } from '../assets';

---

<button class="theme-toggle" id="theme-toggle" title="Toggles theme" aria-label="auto" aria-live="polite">
  <IconDark class="theme-toggle__icon__dark" />
  <IconLight class="theme-toggle__icon__light" />
</button>

<style>
html[data-theme="light"] .theme-toggle__icon__dark {
  display: none;
}
html[data-theme="light"] .theme-toggle__icon__light {
  display: block;
}

html[data-theme="dark"] .theme-toggle__icon__dark {
  display: block;
}
html[data-theme="dark"] .theme-toggle__icon__light {
  display: none;
}

.theme-toggle {
  appearance: none;
  cursor: pointer;
  user-select: none;
  border: none;
  background: transparent;
  color: var(--color-text-header);
}
.theme-toggle:hover {
  color: var(--color-primary);
}
</style>

<script in:raw>
const storageKey = 'theme-preference';

const onClick = () => {
  // flip current value
  theme.value = theme.value === 'light' ? 'dark' : 'light';
  setPreference()
};

const getColorPreference = () => {
  if (localStorage.getItem(storageKey))
    return localStorage
        .getItem(storageKey);
  else
    return window
        .matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
};

const setPreference = () => {
  localStorage
    .setItem(storageKey, theme.value);
  reflectPreference();
};

const reflectPreference = () => {
  document.firstElementChild
    .setAttribute('data-theme', theme.value);

  document
    .querySelector('#theme-toggle')
    ?.setAttribute('aria-label', theme.value);
};

const theme = {
  value: getColorPreference(),
};

// set early so no page flashes / CSS is made aware
reflectPreference();

window.onload = () => {
  // set on load so screen readers can see latest value on the button
  reflectPreference();

  // now this script can find and listen for clicks on the control
  document
    .querySelector('#theme-toggle')
    .addEventListener('click', onClick);
}

// sync with system changes
window
  .matchMedia('(prefers-color-scheme: dark)')
  .addEventListener('change', ({matches:isDark}) => {
    theme.value = isDark ? 'dark' : 'light';
    setPreference();
  });
</script>
